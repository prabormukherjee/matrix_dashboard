kubectl create namespace monitoring
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
# helm repo add stable https://kubernetes-charts.storage.googleapis.com # this is deprecated
helm repo add stable https://charts.helm.sh/stable
helm repo update
helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --kubeconfig /etc/rancher/k3s/k3s.yaml

kubectl create namespace observability
kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/crds/jaegertracing.io_jaegers_crd.yaml
kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/service_account.yaml
kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role.yaml
kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role_binding.yaml
kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/operator.yaml

kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/cluster_role.yaml
kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/cluster_role_binding.yaml

kubectl get po -n monitoring | grep grafana
kubectl port-forward -n monitoring prometheus-grafana-588475b7c6-qtflq 3000

kubectl port-forward svc/frontend-service 8080:8080
kubectl port-forward -n monitoring svc/prometheus-operated 9090:9090

kubectl get -n observability ingress -o yaml | tail
kubectl get pods -n observability -l=app="jaeger" -o name
kubectl port-forward -n observability pod/my-jaeger-tracing-6d5844bcf6-t27sl 16686:16686

ingress_name=$(kubectl get -n observability ingress -o jsonpath='{.items[0].metadata.name}'); \
    ingress_port=$(kubectl get -n observability ingress -o jsonpath='{.items[0].spec.defaultBackend.service.port.number}'); \
    echo -e "\n\n${ingress_name}.observability.svc.cluster.local:${ingress_port}"
